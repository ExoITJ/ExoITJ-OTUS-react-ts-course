{"version":3,"file":"main.7f0b69826c9c1a1f2433.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;ACZA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA","sources":["webpack://otus-react-ts-course/./src/components/box/box.tsx","webpack://otus-react-ts-course/./src/components/game-of-life/game-of-life.stories.tsx","webpack://otus-react-ts-course/./src/components/game-of-life/game-of-life.tsx","webpack://otus-react-ts-course/./src/components/grid/grid.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\n\r\ninterface BoxProps {\r\n  id: string;\r\n  row: number;\r\n  column: number;\r\n  selectBox: (row: number, column: number) => void;\r\n  className: 'box on' | 'box off';\r\n}\r\n\r\nconst Box: FC<BoxProps> = ({ id, className }) => <div className={className} id={id} />;\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\r\nimport { getEmptyGrid } from './game-of-life.utils';\r\nimport GameOfLife from './game-of-life';\r\nimport '../../index.css';\r\n\r\nexport default {\r\n  component: GameOfLife,\r\n  title: 'Components/Grid',\r\n} as ComponentMeta<typeof GameOfLife>;\r\n\r\nexport const Example: ComponentStory<typeof GameOfLife> = () => {\r\n  const grid = getEmptyGrid(40, 40);\r\n\r\n  return <GameOfLife />;\r\n};\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport Grid from '../grid/grid';\r\nimport { getEmptyGrid } from './game-of-life.utils';\r\n\r\nconst GameOfLife: FC = () => {\r\n  const [rows, setRows] = useState(40);\r\n  const [columns, setColumns] = useState(40);\r\n  const [grid, setGrid] = useState<boolean[][]>([]);\r\n\r\n  useEffect(() => {\r\n    const newGrid = getEmptyGrid(rows, columns);\r\n    setGrid(newGrid);\r\n  }, [rows, columns]);\r\n\r\n  const selectBox = (row: number, column: number) => {\r\n    const newGrid = grid.map((rowArr, rowIndex) =>\r\n      rowArr.map((colItem, colIndex) => (rowIndex === row && colIndex === column ? !colItem : colItem)),\r\n    );\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>The Game of Life</h1>\r\n      <Grid grid={grid} columns={columns} selectBox={selectBox} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOfLife;\r\n","import React, { FC } from 'react';\r\nimport Box from '../box/box';\r\n\r\ninterface GridProps {\r\n  grid: boolean[][];\r\n  columns: number;\r\n  selectBox: (row: number, column: number) => void;\r\n}\r\n\r\nconst Grid: FC<GridProps> = ({ columns, grid, selectBox }) => {\r\n  const width = columns * 11;\r\n\r\n  const rowsArr = grid.map((rowArr, rowIdx) =>\r\n    rowArr.map((item, colIdx) => {\r\n      const boxId = `${rowIdx}_${colIdx}`;\r\n      return (\r\n        <Box\r\n          id={boxId}\r\n          key={boxId}\r\n          row={rowIdx}\r\n          column={colIdx}\r\n          selectBox={selectBox}\r\n          className={grid[rowIdx][colIdx] ? 'box on' : 'box off'}\r\n        />\r\n      );\r\n    }),\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid\" style={{ width }}>\r\n      {rowsArr}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"names":[],"sourceRoot":""}