{"version":3,"file":"main.24fcdf5d066c62dba9ab.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;ACdA;AAAA;AAGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACHA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA","sources":["webpack://otus-react-ts-course/./src/components/box/box.tsx","webpack://otus-react-ts-course/./src/components/game-of-life/game-of-life.utils.ts","webpack://otus-react-ts-course/./src/components/grid/grid.stories.tsx","webpack://otus-react-ts-course/./src/components/grid/grid.tsx"],"sourcesContent":["import React, { FC } from 'react';\r\n\r\ninterface BoxProps {\r\n  id: string;\r\n  row: number;\r\n  column: number;\r\n  selectBox: (row: number, column: number) => void;\r\n  className: 'box on' | 'box off';\r\n}\r\n\r\nconst Box: FC<BoxProps> = ({ id, row, column, className, selectBox }) => (\r\n  <div className={className} id={id} onClick={() => selectBox(row, column)} />\r\n);\r\n\r\nexport default Box;\r\n","export const getEmptyGrid = (rows: number, columns: number): boolean[][] =>\r\n  Array(rows)\r\n    .fill(false)\r\n    .map(() => Array(columns).fill(false));\r\n","import React from 'react';\r\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\r\nimport { getEmptyGrid } from '../game-of-life/game-of-life.utils';\r\nimport Grid from './grid';\r\nimport '../../index.css';\r\n\r\nexport default {\r\n  component: Grid,\r\n  title: 'Components/Grid',\r\n} as ComponentMeta<typeof Grid>;\r\n\r\nexport const Example: ComponentStory<typeof Grid> = () => {\r\n  const grid = getEmptyGrid(40, 40);\r\n\r\n  return <Grid grid={grid} columns={40} />;\r\n};\r\n","import React, { FC } from 'react';\r\nimport Box from '../box/box';\r\n\r\ninterface GridProps {\r\n  grid: boolean[][];\r\n  columns: number;\r\n  selectBox: (row: number, column: number) => void;\r\n}\r\n\r\nconst Grid: FC<GridProps> = ({ columns, grid, selectBox }) => {\r\n  const width = columns * 11;\r\n\r\n  const rowsArr = grid.map((rowArr, rowIdx) =>\r\n    rowArr.map((item, colIdx) => {\r\n      const boxId = `${rowIdx}_${colIdx}`;\r\n      return (\r\n        <Box\r\n          id={boxId}\r\n          key={boxId}\r\n          row={rowIdx}\r\n          column={colIdx}\r\n          selectBox={selectBox}\r\n          className={grid[rowIdx][colIdx] ? 'box on' : 'box off'}\r\n        />\r\n      );\r\n    }),\r\n  );\r\n\r\n  return (\r\n    <div className=\"grid\" style={{ width }}>\r\n      {rowsArr}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"names":[],"sourceRoot":""}